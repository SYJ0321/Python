1. 리스트 조작하기
  - 리스트에 요소를 추가하는 메서드
    1) append(요소): 요소 하나를 추가
      - 메서드를 호출한 리스트가 변경됨. 새 리스트 생성 x
      - 인자에 리스트 입력 가능 -> 중첩 리스트
    2) extend(리스트): 리스트를 연결해 확장
    3) insert(인덱스, 요소): 특정 인덱스에 요소 추가
      - 원래 인덱스의 자리에 있던 요소는 뒤로 밀림
    * 리스트 중간에 요소 여러 개 추가: list[k:k]=[a1,a2,a3]
  - 리스트에서 요소를 삭제
    1) pop(k): 리스트의 인덱스가 k인 요소를 삭제한 뒤 삭제한 요소를 반환
      - 기본: 맨 마지막 요소 삭제
    2) remove(값): 특정 값을 찾아서 삭제
      - 리스트에 같은 값이 여러 개 있을 경우 처음 찾은 값만 삭제
  - index(값): 특정 값의 인덱스 구하기
  - count(값): 특정 값의 개수 구하기
  - reverse(): 요소의 순서 뒤집기
  - sort(): 요소를 작은 순서대로 정렬
    - reverse=True: 큰 순서대로 정렬
    - 메서드를 사용한 리스트 변경
      * sorted(리스트): 정렬된 새 리스트 생성
  - clear(): 리스트의 모든 요소 삭제
  - 리스트가 비어 있는지 판단하는 법
    - if not seq / if seq -> 비어 있으면 / 내용이 있으면 True
    - list[-1] -> 에러가 발생하면 빈 리스트
  - 리스트를 슬라이스로 조작하기
    - list[len(list):]: 리스트의 끝에서부터 시작
2. deque(double ended queue): 양쪽 끝에서 추가/삭제가 가능한 큐
  - deque(반복 가능한 객체): 덱 생성

3. 리스트의 할당과 복사
  - 리스트 할당: 실제로는 리스트가 1개
    - list2=list1
    - list2의 요소를 변경하면 list1, list2에 모두 반영됨
  - 리스트 복사: 두 개의 리스트
    - list2=list1.copy()
    - 한 쪽 값을 변경해도 다른 리스트에 영향 X

4. 반복문으로 리스트 출력
  - for i in list:
        코드
  - for index, value in enumerate(list):
        코드
    - 인덱스와 요소 함께 출력
    - enumerate(list, start=1): 인덱스가 1부터 시작하도록 함
      = enumerate(list, 1)

5. min(list): 리스트의 최소값 구하기
6. max(list): 리스트의 최대값 구하기
7. sum(list): 리스트의 요소들의 합계 구하기

8. 리스트 컴프리헨션: 리스트 안에 식, for 반복문, if 조건문 등을 지정하여 리스트를 생성하는 것
  = 리스트 내포, 리스트 내장, 리스트 축약, 리스트 해석, 리스트 표현식
  - [식 for 변수 in 리스트] / list(식 for 변수 in 리스트)
  - [식 for 변수 in 리스트 if 조건식] / list(식 for 변수 in 리스트 if 조건식)

9. 리스트에 map 사용하기
  - list(map(함수, 리스트)) / tuple(map(함수, 튜플))
  
10. 튜플 응용하기
  - index(값): 특정 값의 인덱스 구하기
  - count(값): 특정 값의 개수
  - 튜플 표현식: tuple(식 for 벼수 in 리스트 if 조건식)
    - () 안에 표현식을 넣으면 튜플 x, 제너레이터 표현식이 됨
  - tuple(map(int, list))
  - min, max, sum
